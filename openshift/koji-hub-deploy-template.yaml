apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: koji-hub-test-template
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      name: koji-dojo-config
  data:
    koji.git.url: https://pagure.io/koji.git
    koji.git.branch: master
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: hub-koji-claim
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    storageClassName: glusterfs-storage
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: hub-koji-clients-claim
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    storageClassName: glusterfs-storage
- apiVersion: v1
  kind: Route
  metadata:
    name: koji-hub
    labels:
      environment: "test-${TEST_ID}"
  spec:
    port:
      targetPort: https
    tls:
      termination: passthrough
    to:
      kind: Service
      name: koji-hub
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    name: koji-db
  spec:
    replicas: 1
    selector:
      environment: db
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: db
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: koji
          - name: POSTGRESQL_USER
            value: koji
          - name: POSTGRESQL_PASSWORD
            value: mypassword
          image: openshift/postgresql-92-centos7
          imagePullPolicy: IfNotPresent
          name: koji-db
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
  status: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    name: hub
    labels:
      environment: "test-${TEST_ID}"
  spec:
    replicas: 1
    selector:
      environment: "test-${TEST_ID}"
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          environment: "test-${TEST_ID}"
      spec:
        containers:
        - image: "${KOJI_HUB_IMAGE_REPO}:${KOJI_HUB_VERSION}"
          imagePullPolicy: Always
          name: koji-hub
          ports:
          - containerPort: 22
            protocol: TCP
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          resources:
            limits:
              memory: 1000Mi
              cpu: 1000m
            requests:
              memory: 800Mi
              cpu: 800m
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /opt/koji
            name: koji-volume
          - mountPath: /opt/koji-clients
            name: koji-clients
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        serviceAccount: koji-sa
        serviceAccountName: koji-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - name: koji-volume
          persistentVolumeClaim:
            claimName: hub-koji-claim
        - name: koji-clients
          persistentVolumeClaim:
            claimName: hub-koji-clients-claim
    test: false
    triggers:
    - type: ConfigChange
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: koji-db
  spec:
    ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      environment: db
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: koji-hub
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: https
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      environment: "test-${TEST_ID}"
    sessionAffinity: None
    type: ClusterIP
parameters:
  - name: KOJI_DOJO_REMOTE
    displayName: Remote for koji dojo
    value: https://github.com/LynnZhuang/koji-dojo
    required: true
  - name: KOJI_DOJO_BRANCH
    displayName: koji dojo branch
    value: master
    required: true
  - name: KOJI_HUB_IMAGE_REPO
    displayName: Koji image repo to be tested
    value: docker-registry.engineering.redhat.com/brew-test/koji-hub
    required: true
  - name: KOJI_HUB_VERSION
    displayName: Koji image version to be tested
    required: true
  - name: TEST_ID
    displayName: Test ID
    required: true
