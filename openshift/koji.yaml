apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: koji
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: koji-dojo-config
  data:
    koji.git.url: https://pagure.io/koji.git
    koji.git.branch: master
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: hub-koji-claim
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    storageClassName: glusterfs-storage
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: hub-koji-clients-claim
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    storageClassName: glusterfs-storage
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    name: builder
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: koji-builder:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: builder
      git:
        ref: ${KOJI_DOJO_BRANCH}
        uri: ${KOJI_DOJO_REMOTE}
      type: Git
    strategy:
      dockerStrategy:
        noCache: true
      type: Docker
    triggers: []
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    name: client
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: koji-client:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: client
      git:
        ref: ${KOJI_DOJO_BRANCH}
        uri: ${KOJI_DOJO_REMOTE}
      type: Git
    strategy:
      dockerStrategy:
        noCache: true
      type: Docker
    triggers: []
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    name: hub
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: koji-hub:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: hub
      git:
        ref: ${KOJI_DOJO_BRANCH}
        uri: ${KOJI_DOJO_REMOTE}
      type: Git
    strategy:
      dockerStrategy:
        noCache: true
      type: Docker
    triggers: []
  status:
    lastVersion: 0
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 1
    name: koji-builder
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 1
    name: koji-client
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 1
    name: koji-hub
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    name: koji-builder
  spec:
    replicas: 1
    selector:
      name: builder
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: builder
      spec:
        containers:
        - image: koji-builder
          imagePullPolicy: IfNotPresent
          name: koji-builder
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /opt/koji
            name: koji-volume
          - mountPath: /opt/koji-clients
            name: koji-clients
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        serviceAccount: koji-sa
        serviceAccountName: koji-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - name: koji-volume
          persistentVolumeClaim:
            claimName: hub-koji-claim
        - name: koji-clients
          persistentVolumeClaim:
            claimName: hub-koji-clients-claim
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - koji-builder
        from:
          kind: ImageStreamTag
          name: koji-builder:latest
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    name: koji-client
  spec:
    replicas: 1
    selector:
      name: client
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: client
      spec:
        containers:
        - image: koji-client
          imagePullPolicy: IfNotPresent
          name: koji-client
          resources: {}
          stdin: true
          tty: true
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /opt/koji
            name: koji-volume
          - mountPath: /opt/koji-clients
            name: koji-clients
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        serviceAccount: koji-sa
        serviceAccountName: koji-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - name: koji-volume
          persistentVolumeClaim:
            claimName: hub-koji-claim
        - name: koji-clients
          persistentVolumeClaim:
            claimName: hub-koji-clients-claim
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - koji-client
        from:
          kind: ImageStreamTag
          name: koji-client:latest
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    name: koji-db
  spec:
    replicas: 1
    selector:
      name: db
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: db
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: koji
          - name: POSTGRESQL_USER
            value: koji
          - name: POSTGRESQL_PASSWORD
            value: mypassword
          image: openshift/postgresql-92-centos7
          imagePullPolicy: IfNotPresent
          name: koji-db
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
  status: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    name: hub
  spec:
    replicas: 1
    selector:
      name: hub
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: hub
      spec:
        containers:
        - env:
          - name: ADDITIONAL_SAN
            value: ${PUBLIC_IP}
          image: koji-hub
          imagePullPolicy: IfNotPresent
          name: koji-hub
          ports:
          - containerPort: 22
            protocol: TCP
          - containerPort: 80
            protocol: TCP
          - containerPort: 443
            protocol: TCP
          resources:
            limits:
              memory: 3000Mi
              cpu: 2000m
            requests:
              memory: 1000Mi
              cpu: 1000m
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /opt/koji
            name: koji-volume
          - mountPath: /opt/koji-clients
            name: koji-clients
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        serviceAccount: koji-sa
        serviceAccountName: koji-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - name: koji-volume
          persistentVolumeClaim:
            claimName: hub-koji-claim
        - name: koji-clients
          persistentVolumeClaim:
            claimName: hub-koji-clients-claim
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - koji-hub
        from:
          kind: ImageStreamTag
          name: koji-hub:latest
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: koji-db
  spec:
    ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: db
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: koji-hub
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: https
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      name: hub
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: koji-hub
  spec:
    port:
      targetPort: https
    tls:
      termination: passthrough
    to:
      kind: Service
      name: koji-hub
      weight: 100
    wildcardPolicy: None
parameters:
  - name: PUBLIC_IP
    displayName: Public IP of openshift router
    value: 10.3.9.64
    required: true
  - name: KOJI_DOJO_REMOTE
    displayName: Remote for koji dojo
    value: https://github.com/LynnZhuang/koji-dojo
    required: true
  - name: KOJI_DOJO_BRANCH
    displayName: koji dojo branch
    value: master
    required: true
